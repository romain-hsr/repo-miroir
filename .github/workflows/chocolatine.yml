---
on:
  push:
    branches-ignore:
      - "ga-ignore-*"
  pull_request:
    branches-ignore:
      - "ga-ignore-*"

env:
  MIRROR_URL: "git@github.com:EpitechPGEPromo2029/B-DOP-200-MLH-2-1-chocolatine-romain.hanser.git"
  EXECUTABLES: "choco"

jobs:
  check_coding_style:
    name: Code Style Verification
    runs-on: ubuntu-latest
    container: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - name: Retrieve Code
        uses: actions/checkout@v4

      - name: Run Style Checker
        run: check.sh $(pwd) $(pwd)

      - name: Check for Errors
        run: |
          if [ -s coding-style-reports.log ]; then
            while IFS= read -r line; do
              file=$(echo "$line" | cut -d ':' -f1)
              lineno=$(echo "$line" | cut -d ':' -f2)
              echo "::error file=$file,line=$lineno::$line"
            done < coding-style-reports.log
            exit 1
          fi

  check_program_compilation:
    name: Compilation Verification
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker
    needs: check_coding_style
    steps:
      - name: Retrieve Code
        uses: actions/checkout@v4

      - name: Compilation
        run: timeout 120 make

      - name: Cleanup
        run: make clean

      - name: Verify Executables
        run: |
          IFS=','
          for exe in $EXECS; do
            if [[ ! -x "$exe" ]]; then
              echo "::error file=$exe::Missing or non-executable file"
              exit 1
            fi
          done

  run_tests:
    name: Run Tests
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker
    needs: check_program_compilation
    steps:
      - name: Retrieve Code
        uses: actions/checkout@v4

      - name: Run Tests
        run: timeout 120 make tests_run

  push_to_mirror:
    name: Synchronization with Mirror
    runs-on: ubuntu-latest
    needs: run_tests
    steps:
      - name: Retrieve Code
        uses: actions/checkout@v4

      - name: Push to Mirror
        uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url: "${{ env.MIRROR_URL }}"
          ssh_private_key: "${{ secrets.GIT_SSH_PRIVATE_KEY }}"
